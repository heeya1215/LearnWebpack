@ Webpack 소개
$ [개발환경] Webpack 개발환경 설정 : Atom, Chrome, Node.js, NPM, Github 설치
인프런 Vue.js 강의 링크 (개발환경쪽 영상은 결제하지 않아도 미리보기 가능합니다) https://www.inflearn.com/course/vue-pwa-vue-js-%EA%B8%B0%EB%B3%B8/
아톰 공식 사이트 https://atom.io/
Node.js 공식 사이트 https://nodejs.org/en/
Chrome 브라우저 https://www.google.co.kr/chrome/browser/desktop/index.html

@ Webpack 소개
$ [실습] Webpack 시작하기
github 리파지토리 : https://github.com/joshua1988/LearnWebpack

* Webpack 4 변경으로 인한 문제
   webpack 명령어 시 에러 발생
    $ webpack app/index.js dist/bundle.js
    해결 방법 1 => app 폴더 이름 변경 -> src
    해결 방법 2 => $ webpack app/index.js --output dist/bundle.js --mode development


@ Webpack Output
$ [부록] path.join() & path.resolve() 소개
Node Path 공식 문서 : https://nodejs.org/api/path.htm

@ Webpack Loader
$ Loader 소개
expose-loader	: https://www.npmjs.com/package/expose-loader
Imports-loader	: https://github.com/webpack-contrib/imports-loader
Loaders 더 많은 설정 보기	: https://webpack.js.org/concepts/loaders/

$ Babel Loader
Babel 공식 사이트 : https://babeljs.io/

%[실습] CSS Code Splitting 1/2
ExractTextWebpackPlugin	: https://webpack.js.org/plugins/extract-text-webpack-plugin/


@ Webpack Plugins
$ Plugin 소개
플러그인 종류	: https://www.inflearn.com/course-status-2/

$ Plugin 종류
Provide Plugin	: 삭제됨
Define Plugin	: 삭제됨
Manifest Plugin	: https://github.com/danethurber/webpack-manifest-plugin

$ [실습] Libraries Codes Splitting 1 – Bundling libraries
Moment.js 공식 사이트	: https://momentjs.com/
Lodash.js 공식 사이트	: https://lodash.com/

$ [실습] Libraries Codes Splitting 2 – Common Chunks Plugin
Common Chunks Plugin 더 알아보기	: https://joshua1988.github.io/web-development/webpack/common-chunk-plugin/
** Webpack 4에서 Common Chunks Plugin 없어짐 => splitChunks로 대체 : https://github.com/webpack/webpack/issues/6626


@ Webpack Resolve
N/A


@ Webpack Dev Server

$ Webpack Dev Server 소개
Webpack Dev Server 추가옵션 : https://webpack.js.org/configuration/dev-server/

$ Webpack Dev Server Option
Gzip 압축 : https://ko.wikipedia.org/wiki/Gzip

$ [실습] Webpack Dev Server 1 – Server 구성 및 실행


$ [실습] Webpack Dev Server 2 – Dev Server 인메모리 컴파일의 특징
Compile in memory : https://webpack.js.org/ 에서 검색


@ Webpack Dev Middleware

$ Webpack Dev Middleware 소개
Middleware 란? : https://ko.wikipedia.org/wiki/%EB%AF%B8%EB%93%A4%EC%9B%A8%EC%96%B4
Wrapper 란? : https://ko.wikipedia.org/wiki/%EB%9E%98%ED%8D%BC_%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC
Node.js : https://en.wikipedia.org/wiki/Node.js
Express 프레임워크 : http://expressjs.com/ko/

$ [실습] Webpack Dev Middleware – Node.js로 로컬 서버 구성
Webpack Dev Middleware(튜토리얼 링크) : https://github.com/joshua1988/LearnWebpack#example-5---webpack-dev-middleware
Node Path 공식 문서 : https://nodejs.org/api/path.html
EJS : http://ejs.co/
템플릿 엔진 : https://en.wikipedia.org/wiki/Web_template_system

$ [실습] Webpack Dev Middleware
Webpack Dev Middleware (공식 사이트 구버전) : deprecated
Webpack Dev Middleware (공식 사이트 최신) : https://webpack.js.org/guides/development/#using-webpack-dev-middleware
